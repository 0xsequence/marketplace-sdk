{"version":3,"file":"queries-BJK6b9SM.js","names":["args: UseCountOfPrimarySaleItemsArgs","config: SdkConfig","params: FetchPrimarySaleItemsParams","params: ListPrimarySaleItemsQueryOptions","initialPage: PageParam","params: FetchPrimarySaleItemsCountParams","args: PrimarySaleItemsCountQueryOptions"],"sources":["../src/react/queries/countOfPrimarySaleItems.ts","../src/react/queries/primarySaleItems.ts","../src/react/queries/primarySaleItemsCount.ts"],"sourcesContent":["import { queryOptions } from '@tanstack/react-query';\nimport type { Address } from 'viem';\nimport type { SdkConfig } from '../../types';\nimport {\n\ttype GetCountOfPrimarySaleItemsArgs,\n\tgetMarketplaceClient,\n\ttype PrimarySaleItemsFilter,\n} from '../_internal';\n\nexport interface UseCountOfPrimarySaleItemsArgs\n\textends Omit<\n\t\tGetCountOfPrimarySaleItemsArgs,\n\t\t'chainId' | 'primarySaleContractAddress'\n\t> {\n\tchainId: number;\n\tprimarySaleContractAddress: Address;\n\tfilter?: PrimarySaleItemsFilter;\n\tquery?: {\n\t\tenabled?: boolean;\n\t};\n}\n\nexport async function fetchCountOfPrimarySaleItems(\n\targs: UseCountOfPrimarySaleItemsArgs,\n\tconfig: SdkConfig,\n) {\n\tconst marketplaceClient = getMarketplaceClient(config);\n\n\tconst { chainId, primarySaleContractAddress, filter } = args;\n\tconst data = await marketplaceClient.getCountOfPrimarySaleItems({\n\t\tchainId: String(chainId),\n\t\tprimarySaleContractAddress,\n\t\tfilter,\n\t});\n\n\treturn data.count;\n}\n\nexport function countOfPrimarySaleItemsOptions(\n\targs: UseCountOfPrimarySaleItemsArgs,\n\tconfig: SdkConfig,\n) {\n\treturn queryOptions({\n\t\tenabled: args.query?.enabled ?? true,\n\t\tqueryKey: ['countOfPrimarySaleItems', args],\n\t\tqueryFn: () => fetchCountOfPrimarySaleItems(args, config),\n\t});\n}\n","import { infiniteQueryOptions } from '@tanstack/react-query';\nimport type { Address } from 'viem';\nimport type { SdkConfig } from '../../types';\nimport {\n\tgetMarketplaceClient,\n\ttype ListPrimarySaleItemsArgs,\n\ttype ListPrimarySaleItemsReturn,\n\ttype Page,\n\ttype PrimarySaleItemsFilter,\n\ttype ValuesOptional,\n} from '../_internal';\nimport type { StandardQueryOptions } from '../types/query';\n\nexport interface FetchPrimarySaleItemsParams {\n\tchainId: number;\n\tprimarySaleContractAddress: Address;\n\tfilter?: PrimarySaleItemsFilter;\n\tpage?: Page;\n\tconfig: SdkConfig;\n}\n\n/**\n * Fetches primary sale items from the marketplace API\n */\nexport async function fetchPrimarySaleItems(\n\tparams: FetchPrimarySaleItemsParams,\n): Promise<ListPrimarySaleItemsReturn> {\n\tconst { chainId, primarySaleContractAddress, filter, page, config } = params;\n\n\tconst marketplaceClient = getMarketplaceClient(config);\n\n\treturn marketplaceClient.listPrimarySaleItems({\n\t\tchainId: String(chainId),\n\t\tprimarySaleContractAddress,\n\t\tfilter,\n\t\tpage,\n\t});\n}\n\nexport type ListPrimarySaleItemsQueryOptions =\n\tValuesOptional<FetchPrimarySaleItemsParams> & {\n\t\tquery?: StandardQueryOptions;\n\t};\n\nexport const listPrimarySaleItemsQueryOptions = (\n\tparams: ListPrimarySaleItemsQueryOptions,\n) => {\n\tconst enabled = Boolean(\n\t\tparams.primarySaleContractAddress &&\n\t\t\tparams.chainId &&\n\t\t\tparams.config &&\n\t\t\t(params.query?.enabled ?? true),\n\t);\n\n\ttype PageParam = { page: number; pageSize: number };\n\tconst initialPage: PageParam = { page: 1, pageSize: 30 };\n\n\treturn infiniteQueryOptions({\n\t\tqueryKey: ['listPrimarySaleItems', params],\n\t\tqueryFn: async ({ pageParam }) => {\n\t\t\treturn fetchPrimarySaleItems({\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tchainId: params.chainId!,\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tprimarySaleContractAddress: params.primarySaleContractAddress!,\n\t\t\t\tfilter: params.filter,\n\t\t\t\tpage: pageParam,\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tconfig: params.config!,\n\t\t\t});\n\t\t},\n\t\tinitialPageParam: initialPage,\n\t\tgetNextPageParam: (lastPage) =>\n\t\t\tlastPage.page?.more\n\t\t\t\t? {\n\t\t\t\t\t\tpage: (lastPage.page?.page || 1) + 1,\n\t\t\t\t\t\tpageSize: lastPage.page?.pageSize || 30,\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t\t...params.query,\n\t\tenabled,\n\t});\n};\n\nexport type { ListPrimarySaleItemsArgs, ListPrimarySaleItemsReturn };\n","import { queryOptions } from '@tanstack/react-query';\nimport type { Address } from 'viem';\nimport type { SdkConfig } from '../../types';\nimport {\n\ttype GetCountOfPrimarySaleItemsReturn,\n\tgetMarketplaceClient,\n\ttype PrimarySaleItemsFilter,\n} from '../_internal';\nimport type { StandardQueryOptions } from '../types/query';\n\nexport interface FetchPrimarySaleItemsCountParams {\n\tchainId: number;\n\tprimarySaleContractAddress: Address;\n\tfilter?: PrimarySaleItemsFilter;\n\tconfig: SdkConfig;\n}\n\n/**\n * Fetches the count of primary sale items from the marketplace API\n */\nexport async function fetchPrimarySaleItemsCount(\n\tparams: FetchPrimarySaleItemsCountParams,\n): Promise<GetCountOfPrimarySaleItemsReturn> {\n\tconst { chainId, primarySaleContractAddress, filter, config } = params;\n\n\tconst marketplaceClient = getMarketplaceClient(config);\n\treturn marketplaceClient.getCountOfPrimarySaleItems({\n\t\tchainId: String(chainId),\n\t\tprimarySaleContractAddress,\n\t\tfilter,\n\t});\n}\n\nexport type PrimarySaleItemsCountQueryOptions =\n\tPartial<FetchPrimarySaleItemsCountParams> & {\n\t\tquery?: StandardQueryOptions;\n\t};\n\nexport const primarySaleItemsCountQueryOptions = (\n\targs: PrimarySaleItemsCountQueryOptions,\n) => {\n\tconst enabled = Boolean(\n\t\targs.primarySaleContractAddress &&\n\t\t\targs.chainId &&\n\t\t\targs.config &&\n\t\t\t(args.query?.enabled ?? true),\n\t);\n\n\treturn queryOptions({\n\t\tqueryKey: ['primarySaleItemsCount', args],\n\t\tqueryFn: () =>\n\t\t\tfetchPrimarySaleItemsCount({\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tchainId: args.chainId!,\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tprimarySaleContractAddress: args.primarySaleContractAddress!,\n\t\t\t\tfilter: args.filter,\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tconfig: args.config!,\n\t\t\t}),\n\t\t...args.query,\n\t\tenabled,\n\t});\n};\n"],"mappings":";;;;AAsBA,eAAsB,6BACrBA,MACAC,QACC;CACD,MAAM,oBAAoB,qBAAqB,OAAO;CAEtD,MAAM,EAAE,SAAS,4BAA4B,QAAQ,GAAG;CACxD,MAAM,OAAO,MAAM,kBAAkB,2BAA2B;EAC/D,SAAS,OAAO,QAAQ;EACxB;EACA;CACA,EAAC;AAEF,QAAO,KAAK;AACZ;AAED,SAAgB,+BACfD,MACAC,QACC;AACD,QAAO,aAAa;EACnB,SAAS,KAAK,OAAO,WAAW;EAChC,UAAU,CAAC,2BAA2B,IAAK;EAC3C,SAAS,MAAM,6BAA6B,MAAM,OAAO;CACzD,EAAC;AACF;;;;;;;ACvBD,eAAsB,sBACrBC,QACsC;CACtC,MAAM,EAAE,SAAS,4BAA4B,QAAQ,MAAM,QAAQ,GAAG;CAEtE,MAAM,oBAAoB,qBAAqB,OAAO;AAEtD,QAAO,kBAAkB,qBAAqB;EAC7C,SAAS,OAAO,QAAQ;EACxB;EACA;EACA;CACA,EAAC;AACF;AAOD,MAAa,mCAAmC,CAC/CC,WACI;CACJ,MAAM,UAAU,QACf,OAAO,8BACN,OAAO,WACP,OAAO,WACN,OAAO,OAAO,WAAW,MAC3B;CAGD,MAAMC,cAAyB;EAAE,MAAM;EAAG,UAAU;CAAI;AAExD,QAAO,qBAAqB;EAC3B,UAAU,CAAC,wBAAwB,MAAO;EAC1C,SAAS,OAAO,EAAE,WAAW,KAAK;AACjC,UAAO,sBAAsB;IAE5B,SAAS,OAAO;IAEhB,4BAA4B,OAAO;IACnC,QAAQ,OAAO;IACf,MAAM;IAEN,QAAQ,OAAO;GACf,EAAC;EACF;EACD,kBAAkB;EAClB,kBAAkB,CAAC,aAClB,SAAS,MAAM,OACZ;GACA,OAAO,SAAS,MAAM,QAAQ,KAAK;GACnC,UAAU,SAAS,MAAM,YAAY;EACrC;EAEJ,GAAG,OAAO;EACV;CACA,EAAC;AACF;;;;;;;AC9DD,eAAsB,2BACrBC,QAC4C;CAC5C,MAAM,EAAE,SAAS,4BAA4B,QAAQ,QAAQ,GAAG;CAEhE,MAAM,oBAAoB,qBAAqB,OAAO;AACtD,QAAO,kBAAkB,2BAA2B;EACnD,SAAS,OAAO,QAAQ;EACxB;EACA;CACA,EAAC;AACF;AAOD,MAAa,oCAAoC,CAChDC,SACI;CACJ,MAAM,UAAU,QACf,KAAK,8BACJ,KAAK,WACL,KAAK,WACJ,KAAK,OAAO,WAAW,MACzB;AAED,QAAO,aAAa;EACnB,UAAU,CAAC,yBAAyB,IAAK;EACzC,SAAS,MACR,2BAA2B;GAE1B,SAAS,KAAK;GAEd,4BAA4B,KAAK;GACjC,QAAQ,KAAK;GAEb,QAAQ,KAAK;EACb,EAAC;EACH,GAAG,KAAK;EACR;CACA,EAAC;AACF"}