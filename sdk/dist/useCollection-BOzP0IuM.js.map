{"version":3,"file":"useCollection-BOzP0IuM.js","names":["params: UseCollectionParams","queryOptions"],"sources":["../src/react/hooks/data/collections/useCollection.tsx"],"sourcesContent":["'use client';\n\nimport { useQuery } from '@tanstack/react-query';\nimport type { Optional } from '../../../_internal';\nimport {\n\ttype CollectionQueryOptions,\n\tcollectionQueryOptions,\n\ttype FetchCollectionParams,\n} from '../../../queries/collection';\nimport { useConfig } from '../../config/useConfig';\n\nexport type UseCollectionParams = Optional<CollectionQueryOptions, 'config'>;\n\n/**\n * Hook to fetch collection information from the metadata API\n *\n * Retrieves basic contract information including name, symbol, type,\n * and extension data for a given collection contract.\n *\n * @param params - Configuration parameters\n * @param params.chainId - The chain ID (must be number, e.g., 1 for Ethereum, 137 for Polygon)\n * @param params.collectionAddress - The collection contract address\n * @param params.query - Optional React Query configuration\n *\n * @returns Query result containing contract information\n *\n * @example\n * Basic usage:\n * ```typescript\n * const { data, isLoading } = useCollection({\n *   chainId: 137,\n *   collectionAddress: '0x...'\n * })\n * ```\n *\n * @example\n * With custom query options:\n * ```typescript\n * const { data, isLoading } = useCollection({\n *   chainId: 1,\n *   collectionAddress: '0x...',\n *   query: {\n *     refetchInterval: 30000,\n *     enabled: userWantsToFetch\n *   }\n * })\n * ```\n */\nexport function useCollection(params: UseCollectionParams) {\n\tconst defaultConfig = useConfig();\n\n\tconst { config = defaultConfig, ...rest } = params;\n\n\tconst queryOptions = collectionQueryOptions({\n\t\tconfig,\n\t\t...rest,\n\t});\n\n\treturn useQuery({\n\t\t...queryOptions,\n\t});\n}\n\nexport { collectionQueryOptions };\n\nexport type { FetchCollectionParams, CollectionQueryOptions };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,SAAgB,cAAcA,QAA6B;CAC1D,MAAM,gBAAgB,WAAW;CAEjC,MAAM,EAAE,SAAS,cAAe,GAAG,MAAM,GAAG;CAE5C,MAAMC,iBAAe,uBAAuB;EAC3C;EACA,GAAG;CACH,EAAC;AAEF,QAAO,SAAS,EACf,GAAGA,eACH,EAAC;AACF"}