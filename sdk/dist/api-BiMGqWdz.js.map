{"version":3,"file":"api-BiMGqWdz.js","names":["baseUrl?: string","hostname: string","projectAccessKey: string","jwtAuth?: string","input: RequestInfo","init?: RequestInit","headers: Record<string, string>","env: Env","chain: ChainNameOrId","config: SdkConfig","env: ApiConfig['env']"],"sources":["../src/react/_internal/api/laos-api.ts","../src/react/_internal/api/marketplace-api.ts","../src/react/_internal/api/query-keys.ts","../src/react/_internal/api/services.ts"],"sourcesContent":["import type {\n\tGetTokenBalancesReturn,\n\tGetTokenSuppliesReturn,\n} from '@0xsequence/indexer';\n\nexport type SortOption = {\n\tcolumn: string;\n\torder: 'ASC' | 'DESC';\n};\n\nexport type PaginationOptions = {\n\tsort: SortOption[];\n};\n\nexport type TokenSuppliesParams = {\n\tchainId: string;\n\tcontractAddress: string;\n\tincludeMetadata?: boolean;\n\tpage?: PaginationOptions;\n};\n\nexport type TokenBalancesParams = {\n\tchainId: string;\n\taccountAddress: string;\n\tcontractAddress: string;\n\tincludeMetadata?: boolean;\n\tpage?: PaginationOptions;\n};\n\nexport class LaosAPI {\n\tprivate baseUrl = 'https://extensions.api.laosnetwork.io';\n\n\tconstructor(baseUrl?: string) {\n\t\tif (baseUrl) {\n\t\t\tthis.baseUrl = baseUrl;\n\t\t}\n\t}\n\n\tasync getTokenSupplies({\n\t\tchainId,\n\t\tcontractAddress,\n\t\tincludeMetadata = true,\n\t\tpage = {\n\t\t\tsort: [\n\t\t\t\t{\n\t\t\t\t\tcolumn: 'CREATED_AT',\n\t\t\t\t\torder: 'DESC',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t}: TokenSuppliesParams): Promise<GetTokenSuppliesReturn> {\n\t\tconst response = await fetch(`${this.baseUrl}/token/GetTokenSupplies`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tchainId,\n\t\t\t\tcontractAddress,\n\t\t\t\tincludeMetadata,\n\t\t\t\tpage,\n\t\t\t}),\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Failed to get token supplies: ${response.statusText}`);\n\t\t}\n\n\t\treturn await response.json();\n\t}\n\n\tasync getTokenBalances({\n\t\tchainId,\n\t\taccountAddress,\n\t\tcontractAddress,\n\t\tincludeMetadata = true,\n\t\tpage = {\n\t\t\tsort: [\n\t\t\t\t{\n\t\t\t\t\tcolumn: 'CREATED_AT',\n\t\t\t\t\torder: 'DESC',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t}: TokenBalancesParams): Promise<GetTokenBalancesReturn> {\n\t\tconst response = await fetch(`${this.baseUrl}/token/GetTokenBalances`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tchainId,\n\t\t\t\taccountAddress,\n\t\t\t\tcontractAddress,\n\t\t\t\tincludeMetadata,\n\t\t\t\tpage,\n\t\t\t}),\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Failed to get token balances: ${response.statusText}`);\n\t\t}\n\n\t\treturn await response.json();\n\t}\n}\n","import { Marketplace } from './marketplace.gen';\n\nexport class SequenceMarketplace extends Marketplace {\n\tconstructor(\n\t\thostname: string,\n\t\tpublic projectAccessKey: string,\n\t\tpublic jwtAuth?: string,\n\t) {\n\t\tsuper(hostname.endsWith('/') ? hostname.slice(0, -1) : hostname, fetch);\n\t\tthis.fetch = this._fetch;\n\t}\n\n\t_fetch = (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\t\tconst headers: Record<string, string> = {};\n\n\t\tconst jwtAuth = this.jwtAuth;\n\t\tconst projectAccessKey = this.projectAccessKey;\n\n\t\tif (jwtAuth && jwtAuth.length > 0) {\n\t\t\theaders.Authorization = `BEARER ${jwtAuth}`;\n\t\t}\n\n\t\tif (projectAccessKey && projectAccessKey.length > 0) {\n\t\t\theaders['X-Access-Key'] = projectAccessKey;\n\t\t}\n\n\t\tconst requestInit = init || {};\n\t\trequestInit.headers = { ...init?.headers, ...headers };\n\n\t\treturn fetch(input, requestInit);\n\t};\n}\n","// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass CollectableKeys {\n\tstatic all = ['collectable'] as const;\n\tstatic details = [...CollectableKeys.all, 'details'] as const;\n\tstatic lists = [...CollectableKeys.all, 'list'] as const;\n\tstatic floorOrders = [...CollectableKeys.all, 'floorOrders'] as const;\n\tstatic userBalances = [\n\t\t...CollectableKeys.all,\n\t\t...CollectableKeys.details,\n\t\t'userBalances',\n\t] as const;\n\tstatic royaltyPercentage = [\n\t\t...CollectableKeys.all,\n\t\t'royaltyPercentage',\n\t] as const;\n\tstatic highestOffers = [\n\t\t...CollectableKeys.all,\n\t\t...CollectableKeys.details,\n\t\t'highestOffers',\n\t] as const;\n\tstatic lowestListings = [\n\t\t...CollectableKeys.all,\n\t\t...CollectableKeys.details,\n\t\t'lowestListings',\n\t] as const;\n\tstatic offers = [...CollectableKeys.all, 'offers'] as const;\n\tstatic offersCount = [...CollectableKeys.all, 'offersCount'] as const;\n\tstatic listings = [...CollectableKeys.all, 'listings'] as const;\n\tstatic listingsCount = [...CollectableKeys.all, 'listingsCount'] as const;\n\tstatic filter = [...CollectableKeys.all, 'filter'] as const;\n\tstatic counts = [...CollectableKeys.all, 'counts'] as const;\n\tstatic collectibleActivities = [\n\t\t...CollectableKeys.all,\n\t\t'collectibleActivities',\n\t] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass CollectionKeys {\n\tstatic all = ['collections'] as const;\n\tstatic list = [...CollectionKeys.all, 'list'] as const;\n\tstatic detail = [...CollectionKeys.all, 'detail'] as const;\n\tstatic collectionActivities = [\n\t\t...CollectionKeys.all,\n\t\t'collectionActivities',\n\t] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass BalanceQueries {\n\tstatic all = ['balances'] as const;\n\tstatic lists = [...BalanceQueries.all, 'tokenBalances'] as const;\n\tstatic collectionBalanceDetails = [\n\t\t...BalanceQueries.all,\n\t\t'collectionBalanceDetails',\n\t] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass CheckoutKeys {\n\tstatic all = ['checkouts'] as const;\n\tstatic options = [...CheckoutKeys.all, 'options'] as const;\n\tstatic cartItems = [...CheckoutKeys.all, 'cartItems'] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass CurrencyKeys {\n\tstatic all = ['currencies'] as const;\n\tstatic lists = [...CurrencyKeys.all, 'list'] as const;\n\tstatic details = [...CurrencyKeys.all, 'details'] as const;\n\tstatic conversion = [...CurrencyKeys.all, 'conversion'] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass ConfigKeys {\n\tstatic all = ['configs'] as const;\n\tstatic marketplace = [...ConfigKeys.all, 'marketplace'] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass TokenKeys {\n\tstatic all = ['tokens'] as const;\n\tstatic metadata = [...TokenKeys.all, 'metadata'] as const;\n\tstatic supplies = [...TokenKeys.all, 'supplies'] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass TokenSuppliesKeys {\n\tstatic all = ['tokenSupplies'] as const;\n\tstatic maps = [...TokenSuppliesKeys.all, 'map'] as const;\n}\nexport const collectableKeys = CollectableKeys;\nexport const collectionKeys = CollectionKeys;\nexport const balanceQueries = BalanceQueries;\nexport const checkoutKeys = CheckoutKeys;\nexport const currencyKeys = CurrencyKeys;\nexport const configKeys = ConfigKeys;\nexport const tokenKeys = TokenKeys;\nexport const tokenSuppliesKeys = TokenSuppliesKeys;\n","import { SequenceAPIClient } from '@0xsequence/api';\nimport { SequenceIndexer } from '@0xsequence/indexer';\nimport { SequenceMetadata } from '@0xsequence/metadata';\nimport { stringTemplate } from '@0xsequence/network';\nimport type { ApiConfig, Env, SdkConfig } from '../../../types/sdk-config';\nimport { getNetwork } from '../../../utils/network';\nimport { BuilderAPI } from './builder-api';\nimport { SequenceMarketplace } from './marketplace-api';\n\nconst SERVICES = {\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tsequenceApi: 'https://${prefix}api.sequence.app',\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tmetadata: 'https://${prefix}metadata.sequence.app',\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tindexer: 'https://${prefix}${network}-indexer.sequence.app',\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tmarketplaceApi: 'https://${prefix}marketplace-api.sequence.app',\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tbuilderRpcApi: 'https://${prefix}api.sequence.build',\n};\n\ntype ChainNameOrId = string | number;\n\nconst metadataURL = (env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\treturn stringTemplate(SERVICES.metadata, { prefix });\n};\n\nconst indexerURL = (chain: ChainNameOrId, env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\tconst network = getNetwork(chain).name;\n\treturn stringTemplate(SERVICES.indexer, { network: network, prefix });\n};\n\nconst marketplaceApiURL = (env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\treturn stringTemplate(SERVICES.marketplaceApi, { prefix });\n};\n\nconst builderRpcApiURL = (env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\treturn stringTemplate(SERVICES.builderRpcApi, { prefix });\n};\n\nexport const sequenceApiUrl = (env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\treturn stringTemplate(SERVICES.sequenceApi, { prefix });\n};\n\nexport const getBuilderClient = (config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.builder;\n\tconst url =\n\t\toverrides?.url || builderRpcApiURL(overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new BuilderAPI(url, projectAccessKey);\n};\n\nexport const getMetadataClient = (config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.metadata;\n\tconst url = overrides?.url || metadataURL(overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new SequenceMetadata(url, projectAccessKey);\n};\n\nexport const getIndexerClient = (chain: ChainNameOrId, config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.indexer;\n\tconst url =\n\t\toverrides?.url || indexerURL(chain, overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new SequenceIndexer(url, projectAccessKey);\n};\n\nexport const getMarketplaceClient = (config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.marketplace;\n\tconst url =\n\t\toverrides?.url || marketplaceApiURL(overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new SequenceMarketplace(url, projectAccessKey);\n};\n\nexport const getSequenceApiClient = (config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.sequenceApi;\n\tconst url = overrides?.url || sequenceApiUrl(overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new SequenceAPIClient(url, projectAccessKey);\n};\n\nconst getPrefix = (env: ApiConfig['env']) => {\n\tswitch (env) {\n\t\tcase 'development':\n\t\t\treturn 'dev-';\n\t\tcase 'production':\n\t\t\treturn '';\n\t\tcase 'next':\n\t\t\treturn 'next-';\n\t}\n};\n"],"mappings":"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"}