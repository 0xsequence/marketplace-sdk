{"version":3,"file":"index.js","names":[],"sources":["../../../src/react/ssr/create-ssr-client.ts"],"sourcesContent":["import { cookieToInitialState, type State } from 'wagmi';\nimport type { SdkConfig } from '../../types/sdk-config';\nimport { getQueryClient } from '../_internal/api/get-query-client';\nimport { createWagmiConfig } from '../_internal/wagmi/create-config';\nimport { marketplaceConfigOptions } from '../queries/marketplaceConfig';\n\ntype InitSSRClientArgs = {\n\tcookie: string;\n\tconfig: SdkConfig;\n};\n\ntype InitialState = { wagmi?: State };\n\nconst marketplaceConfig = async (config: SdkConfig) => {\n\tconst configOptions = marketplaceConfigOptions(config);\n\treturn getQueryClient().fetchQuery(configOptions);\n};\n\nconst initialState = async (args: InitSSRClientArgs): Promise<InitialState> => {\n\tconst marketConfig = await marketplaceConfig(args.config);\n\tconst wagmiConfig = createWagmiConfig(marketConfig, args.config, true);\n\treturn { wagmi: cookieToInitialState(wagmiConfig, args.cookie) };\n};\n\nexport const createSSRClient = (args: InitSSRClientArgs) => {\n\tconst getMarketplaceConfig = async () => marketplaceConfig(args.config);\n\tconst getInitialState = async () => initialState(args);\n\tconst config = args.config;\n\treturn { getInitialState, getMarketplaceConfig, config };\n};\n"],"mappings":";;;;;;;;;;;;;;AAaA,MAAM,oBAAoB,OAAO,WAAsB;CACtD,MAAM,gBAAgB,yBAAyB,OAAO;AACtD,QAAO,gBAAgB,CAAC,WAAW,cAAc;;AAGlD,MAAM,eAAe,OAAO,SAAmD;AAG9E,QAAO,EAAE,OAAO,qBADI,kBADC,MAAM,kBAAkB,KAAK,OAAO,EACL,KAAK,QAAQ,KAAK,EACpB,KAAK,OAAO,EAAE;;AAGjE,MAAa,mBAAmB,SAA4B;CAC3D,MAAM,uBAAuB,YAAY,kBAAkB,KAAK,OAAO;CACvE,MAAM,kBAAkB,YAAY,aAAa,KAAK;AAEtD,QAAO;EAAE;EAAiB;EAAsB,QADjC,KAAK;EACoC"}