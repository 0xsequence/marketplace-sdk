{"version":3,"file":"primary-sales-azWXce7L.js","names":["initialPage: PageParam"],"sources":["../src/react/queries/primary-sales/countOfPrimarySaleItems.ts","../src/react/queries/primary-sales/primarySaleItems.ts","../src/react/queries/primary-sales/primarySaleItemsCount.ts"],"sourcesContent":["import { queryOptions } from '@tanstack/react-query';\nimport type { Address } from 'viem';\nimport type { SdkConfig } from '../../../types';\nimport {\n\tcollectableKeys,\n\ttype GetCountOfPrimarySaleItemsArgs,\n\tgetMarketplaceClient,\n\ttype PrimarySaleItemsFilter,\n\ttype QueryKeyArgs,\n} from '../../_internal';\n\nexport interface UseCountOfPrimarySaleItemsArgs\n\textends Omit<\n\t\tGetCountOfPrimarySaleItemsArgs,\n\t\t'chainId' | 'primarySaleContractAddress'\n\t> {\n\tchainId: number;\n\tprimarySaleContractAddress: Address;\n\tfilter?: PrimarySaleItemsFilter;\n\tquery?: {\n\t\tenabled?: boolean;\n\t};\n}\n\nexport async function fetchCountOfPrimarySaleItems(\n\targs: UseCountOfPrimarySaleItemsArgs,\n\tconfig: SdkConfig,\n) {\n\tconst marketplaceClient = getMarketplaceClient(config);\n\n\tconst { chainId, primarySaleContractAddress, filter } = args;\n\tconst data = await marketplaceClient.getCountOfPrimarySaleItems({\n\t\tchainId: String(chainId),\n\t\tprimarySaleContractAddress,\n\t\tfilter,\n\t});\n\n\treturn data.count;\n}\n\nexport function getCountOfPrimarySaleItemsQueryKey(\n\targs: UseCountOfPrimarySaleItemsArgs,\n) {\n\tconst apiArgs = {\n\t\tchainId: String(args.chainId),\n\t\tprimarySaleContractAddress: args.primarySaleContractAddress,\n\t\tfilter: args.filter,\n\t} satisfies QueryKeyArgs<GetCountOfPrimarySaleItemsArgs>;\n\n\treturn [...collectableKeys.primarySaleItemsCount, apiArgs] as const;\n}\n\nexport function countOfPrimarySaleItemsOptions(\n\targs: UseCountOfPrimarySaleItemsArgs,\n\tconfig: SdkConfig,\n) {\n\treturn queryOptions({\n\t\tenabled: args.query?.enabled ?? true,\n\t\tqueryKey: getCountOfPrimarySaleItemsQueryKey(args),\n\t\tqueryFn: () => fetchCountOfPrimarySaleItems(args, config),\n\t});\n}\n","import { infiniteQueryOptions } from '@tanstack/react-query';\nimport type { Address } from 'viem';\nimport type { SdkConfig } from '../../../types';\nimport {\n\tcollectableKeys,\n\tgetMarketplaceClient,\n\ttype ListPrimarySaleItemsArgs,\n\ttype ListPrimarySaleItemsReturn,\n\ttype Page,\n\ttype PrimarySaleItemsFilter,\n\ttype QueryKeyArgs,\n\ttype ValuesOptional,\n} from '../../_internal';\nimport type { StandardQueryOptions } from '../../types/query';\n\nexport interface FetchPrimarySaleItemsParams {\n\tchainId: number;\n\tprimarySaleContractAddress: Address;\n\tfilter?: PrimarySaleItemsFilter;\n\tpage?: Page;\n\tconfig: SdkConfig;\n}\n\n/**\n * Fetches primary sale items from the marketplace API\n */\nexport async function fetchPrimarySaleItems(\n\tparams: FetchPrimarySaleItemsParams,\n): Promise<ListPrimarySaleItemsReturn> {\n\tconst { chainId, primarySaleContractAddress, filter, page, config } = params;\n\n\tconst marketplaceClient = getMarketplaceClient(config);\n\n\treturn marketplaceClient.listPrimarySaleItems({\n\t\tchainId: String(chainId),\n\t\tprimarySaleContractAddress,\n\t\tfilter,\n\t\tpage,\n\t});\n}\n\nexport type ListPrimarySaleItemsQueryOptions =\n\tValuesOptional<FetchPrimarySaleItemsParams> & {\n\t\tquery?: StandardQueryOptions;\n\t};\n\nexport function getListPrimarySaleItemsQueryKey(\n\tparams: ListPrimarySaleItemsQueryOptions,\n) {\n\tconst apiArgs = {\n\t\tchainId: String(params.chainId),\n\t\tprimarySaleContractAddress: params.primarySaleContractAddress,\n\t\tfilter: params.filter,\n\t} satisfies QueryKeyArgs<Omit<ListPrimarySaleItemsArgs, 'page'>>;\n\n\treturn [...collectableKeys.listPrimarySaleItems, apiArgs] as const;\n}\n\nexport const listPrimarySaleItemsQueryOptions = (\n\tparams: ListPrimarySaleItemsQueryOptions,\n) => {\n\tconst enabled = Boolean(\n\t\tparams.primarySaleContractAddress &&\n\t\t\tparams.chainId &&\n\t\t\tparams.config &&\n\t\t\t(params.query?.enabled ?? true),\n\t);\n\n\ttype PageParam = { page: number; pageSize: number };\n\tconst initialPage: PageParam = params.page || { page: 1, pageSize: 30 };\n\n\treturn infiniteQueryOptions({\n\t\tqueryKey: getListPrimarySaleItemsQueryKey(params),\n\t\tqueryFn: async ({ pageParam }) => {\n\t\t\treturn fetchPrimarySaleItems({\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tchainId: params.chainId!,\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tprimarySaleContractAddress: params.primarySaleContractAddress!,\n\t\t\t\tfilter: params.filter,\n\t\t\t\tpage: pageParam,\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tconfig: params.config!,\n\t\t\t});\n\t\t},\n\t\tinitialPageParam: initialPage,\n\t\tgetNextPageParam: (lastPage) =>\n\t\t\tlastPage.page?.more ? lastPage.page : undefined,\n\t\t...params.query,\n\t\tenabled,\n\t});\n};\n\nexport type { ListPrimarySaleItemsArgs, ListPrimarySaleItemsReturn };\n","import { queryOptions } from '@tanstack/react-query';\nimport type { Address } from 'viem';\nimport type { SdkConfig } from '../../../types';\nimport {\n\tcollectableKeys,\n\ttype GetCountOfPrimarySaleItemsArgs,\n\ttype GetCountOfPrimarySaleItemsReturn,\n\tgetMarketplaceClient,\n\ttype PrimarySaleItemsFilter,\n\ttype QueryKeyArgs,\n} from '../../_internal';\nimport type { StandardQueryOptions } from '../../types/query';\n\nexport interface FetchPrimarySaleItemsCountParams {\n\tchainId: number;\n\tprimarySaleContractAddress: Address;\n\tfilter?: PrimarySaleItemsFilter;\n\tconfig: SdkConfig;\n}\n\n/**\n * Fetches the count of primary sale items from the marketplace API\n */\nexport async function fetchPrimarySaleItemsCount(\n\tparams: FetchPrimarySaleItemsCountParams,\n): Promise<GetCountOfPrimarySaleItemsReturn> {\n\tconst { chainId, primarySaleContractAddress, filter, config } = params;\n\n\tconst marketplaceClient = getMarketplaceClient(config);\n\treturn marketplaceClient.getCountOfPrimarySaleItems({\n\t\tchainId: String(chainId),\n\t\tprimarySaleContractAddress,\n\t\tfilter,\n\t});\n}\n\nexport type PrimarySaleItemsCountQueryOptions =\n\tPartial<FetchPrimarySaleItemsCountParams> & {\n\t\tquery?: StandardQueryOptions;\n\t};\n\nexport function getPrimarySaleItemsCountQueryKey(\n\targs: PrimarySaleItemsCountQueryOptions,\n) {\n\tconst apiArgs = {\n\t\tchainId: String(args.chainId),\n\t\tprimarySaleContractAddress: args.primarySaleContractAddress,\n\t\tfilter: args.filter,\n\t} satisfies QueryKeyArgs<GetCountOfPrimarySaleItemsArgs>;\n\n\treturn [...collectableKeys.primarySaleItemsCount, apiArgs] as const;\n}\n\nexport const primarySaleItemsCountQueryOptions = (\n\targs: PrimarySaleItemsCountQueryOptions,\n) => {\n\tconst enabled = Boolean(\n\t\targs.primarySaleContractAddress &&\n\t\t\targs.chainId &&\n\t\t\targs.config &&\n\t\t\t(args.query?.enabled ?? true),\n\t);\n\n\treturn queryOptions({\n\t\tqueryKey: getPrimarySaleItemsCountQueryKey(args),\n\t\tqueryFn: () =>\n\t\t\tfetchPrimarySaleItemsCount({\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tchainId: args.chainId!,\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tprimarySaleContractAddress: args.primarySaleContractAddress!,\n\t\t\t\tfilter: args.filter,\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: The enabled check above ensures these are not undefined\n\t\t\t\tconfig: args.config!,\n\t\t\t}),\n\t\t...args.query,\n\t\tenabled,\n\t});\n};\n"],"mappings":";;;;AAwBA,eAAsB,6BACrB,MACA,QACC;CACD,MAAM,oBAAoB,qBAAqB,OAAO;CAEtD,MAAM,EAAE,SAAS,4BAA4B,WAAW;AAOxD,SANa,MAAM,kBAAkB,2BAA2B;EAC/D,SAAS,OAAO,QAAQ;EACxB;EACA;EACA,CAAC,EAEU;;AAGb,SAAgB,mCACf,MACC;CACD,MAAM,UAAU;EACf,SAAS,OAAO,KAAK,QAAQ;EAC7B,4BAA4B,KAAK;EACjC,QAAQ,KAAK;EACb;AAED,QAAO,CAAC,GAAG,gBAAgB,uBAAuB,QAAQ;;AAG3D,SAAgB,+BACf,MACA,QACC;AACD,QAAO,aAAa;EACnB,SAAS,KAAK,OAAO,WAAW;EAChC,UAAU,mCAAmC,KAAK;EAClD,eAAe,6BAA6B,MAAM,OAAO;EACzD,CAAC;;;;;;;;AClCH,eAAsB,sBACrB,QACsC;CACtC,MAAM,EAAE,SAAS,4BAA4B,QAAQ,MAAM,WAAW;AAItE,QAF0B,qBAAqB,OAAO,CAE7B,qBAAqB;EAC7C,SAAS,OAAO,QAAQ;EACxB;EACA;EACA;EACA,CAAC;;AAQH,SAAgB,gCACf,QACC;CACD,MAAM,UAAU;EACf,SAAS,OAAO,OAAO,QAAQ;EAC/B,4BAA4B,OAAO;EACnC,QAAQ,OAAO;EACf;AAED,QAAO,CAAC,GAAG,gBAAgB,sBAAsB,QAAQ;;AAG1D,MAAa,oCACZ,WACI;CACJ,MAAM,UAAU,QACf,OAAO,8BACN,OAAO,WACP,OAAO,WACN,OAAO,OAAO,WAAW,MAC3B;CAGD,MAAMA,cAAyB,OAAO,QAAQ;EAAE,MAAM;EAAG,UAAU;EAAI;AAEvE,QAAO,qBAAqB;EAC3B,UAAU,gCAAgC,OAAO;EACjD,SAAS,OAAO,EAAE,gBAAgB;AACjC,UAAO,sBAAsB;IAE5B,SAAS,OAAO;IAEhB,4BAA4B,OAAO;IACnC,QAAQ,OAAO;IACf,MAAM;IAEN,QAAQ,OAAO;IACf,CAAC;;EAEH,kBAAkB;EAClB,mBAAmB,aAClB,SAAS,MAAM,OAAO,SAAS,OAAO;EACvC,GAAG,OAAO;EACV;EACA,CAAC;;;;;;;;ACnEH,eAAsB,2BACrB,QAC4C;CAC5C,MAAM,EAAE,SAAS,4BAA4B,QAAQ,WAAW;AAGhE,QAD0B,qBAAqB,OAAO,CAC7B,2BAA2B;EACnD,SAAS,OAAO,QAAQ;EACxB;EACA;EACA,CAAC;;AAQH,SAAgB,iCACf,MACC;CACD,MAAM,UAAU;EACf,SAAS,OAAO,KAAK,QAAQ;EAC7B,4BAA4B,KAAK;EACjC,QAAQ,KAAK;EACb;AAED,QAAO,CAAC,GAAG,gBAAgB,uBAAuB,QAAQ;;AAG3D,MAAa,qCACZ,SACI;CACJ,MAAM,UAAU,QACf,KAAK,8BACJ,KAAK,WACL,KAAK,WACJ,KAAK,OAAO,WAAW,MACzB;AAED,QAAO,aAAa;EACnB,UAAU,iCAAiC,KAAK;EAChD,eACC,2BAA2B;GAE1B,SAAS,KAAK;GAEd,4BAA4B,KAAK;GACjC,QAAQ,KAAK;GAEb,QAAQ,KAAK;GACb,CAAC;EACH,GAAG,KAAK;EACR;EACA,CAAC"}