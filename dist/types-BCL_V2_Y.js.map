{"version":3,"file":"types-BCL_V2_Y.js","names":[],"sources":["../src/types/transactions.ts","../src/types/types.ts"],"sourcesContent":["import type { Address } from 'viem';\nimport type { AdditionalFee, MarketplaceKind } from '../react/_internal/api';\n\n/**\n * Transaction types supported by the new buy modal\n */\nexport enum TransactionType {\n\tMARKET_BUY = 'MARKET_BUY', // Secondary market purchases\n\tPRIMARY_SALE = 'PRIMARY_SALE', // Direct from creator/contract\n}\n\n/**\n * Base transaction parameters\n */\nexport interface BaseTransactionParams {\n\tchainId: number;\n\tbuyer: Address;\n\trecipient?: Address;\n\ttransactionType: TransactionType;\n}\n\n/**\n * Market transaction parameters (secondary sales)\n */\nexport interface MarketTransactionParams extends BaseTransactionParams {\n\ttransactionType: TransactionType.MARKET_BUY;\n\tcollectionAddress: Address;\n\tmarketplace: MarketplaceKind;\n\torderId: string;\n\tcollectibleId: string;\n\tquantity: string;\n\tadditionalFees: AdditionalFee[];\n}\n\n/**\n * Primary sale transaction parameters (minting/shop)\n */\nexport interface PrimarySaleTransactionParams extends BaseTransactionParams {\n\ttransactionType: TransactionType.PRIMARY_SALE;\n\tcollectionAddress: Address;\n\tsalesContractAddress: Address;\n\ttokenIds: string[];\n\tamounts: number[];\n\tmaxTotal: string;\n\tpaymentToken: Address;\n\tmerkleProof?: string[];\n\tcontractVersion: 'v1';\n\ttokenType: 'ERC721' | 'ERC1155';\n}\n\n/**\n * Union type for all transaction parameters\n */\nexport type TransactionParams =\n\t| MarketTransactionParams\n\t| PrimarySaleTransactionParams;\n\n/**\n * Parameters for the useTransactionSteps hook\n */\nexport interface TransactionStepsParams extends BaseTransactionParams {\n\tenabled?: boolean;\n}\n\n/**\n * Native token address constant\n */\nexport const NATIVE_TOKEN_ADDRESS =\n\t'0x0000000000000000000000000000000000000000' as Address;\n","import type { Currency } from './api-types';\nimport type { MarketplaceConfig } from './new-marketplace-types';\n\nexport * from './new-marketplace-types';\n\nexport type Price = {\n\tamountRaw: string;\n\tcurrency: Currency;\n};\n\nexport type CardType = 'market' | 'shop' | 'inventory-non-tradable';\n\nexport enum CollectibleCardAction {\n\tBUY = 'Buy',\n\tSELL = 'Sell',\n\tLIST = 'Create listing',\n\tOFFER = 'Make an offer',\n\tTRANSFER = 'Transfer',\n}\n\nexport type MarketCollection =\n\tMarketplaceConfig['market']['collections'][number];\n\nexport type ShopCollection = MarketplaceConfig['shop']['collections'][number];\n\n// export type Order = Omit<APIOrder, 'priceAmount' | 'priceAmountNet'> & {\n// \tpriceAmount: bigint;\n// \tpriceAmountNet: bigint;\n// };\n"],"mappings":";;;;AAMA,IAAY,8DAAL;AACN;AACA;;;;;;AA2DD,MAAa,uBACZ;;;;ACxDD,IAAY,0EAAL;AACN;AACA;AACA;AACA;AACA"}