{"version":3,"file":"api-B7vWX1bJ.js","names":["browserQueryClient: QueryClient | undefined","projectAccessKey: string","jwtAuth?: string","headers: Record<string, string>"],"sources":["../src/react/_internal/api/get-query-client.ts","../src/react/_internal/api/marketplace-api.ts","../src/react/_internal/api/query-keys.ts","../src/react/_internal/api/services.ts"],"sourcesContent":["import {\n\tdefaultShouldDehydrateQuery,\n\tQueryClient,\n} from '@tanstack/react-query';\nimport { hashFn } from 'wagmi/query';\n\nfunction makeQueryClient() {\n\treturn new QueryClient({\n\t\tdefaultOptions: {\n\t\t\tqueries: {\n\t\t\t\tstaleTime: 60 * 1000,\n\t\t\t\tqueryKeyHashFn: hashFn,\n\t\t\t},\n\t\t\tdehydrate: {\n\t\t\t\tshouldDehydrateQuery: (query) =>\n\t\t\t\t\tdefaultShouldDehydrateQuery(query) ||\n\t\t\t\t\tquery.state.status === 'pending',\n\t\t\t},\n\t\t},\n\t});\n}\n\nlet browserQueryClient: QueryClient | undefined;\n\nexport function getQueryClient() {\n\tif (typeof globalThis.document === 'undefined') {\n\t\treturn makeQueryClient();\n\t}\n\n\tif (!browserQueryClient) browserQueryClient = makeQueryClient();\n\treturn browserQueryClient;\n}\n","import { Marketplace } from './marketplace.gen';\n\nexport class SequenceMarketplace extends Marketplace {\n\tconstructor(\n\t\thostname: string,\n\t\tpublic projectAccessKey: string,\n\t\tpublic jwtAuth?: string,\n\t) {\n\t\tsuper(hostname.endsWith('/') ? hostname.slice(0, -1) : hostname, fetch);\n\t\tthis.fetch = this._fetch;\n\t}\n\n\t_fetch = (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\t\tconst headers: Record<string, string> = {};\n\n\t\tconst jwtAuth = this.jwtAuth;\n\t\tconst projectAccessKey = this.projectAccessKey;\n\n\t\tif (jwtAuth && jwtAuth.length > 0) {\n\t\t\theaders.Authorization = `BEARER ${jwtAuth}`;\n\t\t}\n\n\t\tif (projectAccessKey && projectAccessKey.length > 0) {\n\t\t\theaders['X-Access-Key'] = projectAccessKey;\n\t\t}\n\n\t\tconst requestInit = init || {};\n\t\trequestInit.headers = { ...init?.headers, ...headers };\n\n\t\treturn fetch(input, requestInit);\n\t};\n}\n","// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass CollectableKeys {\n\tstatic all = ['collectable'] as const;\n\tstatic details = [...CollectableKeys.all, 'details'] as const;\n\tstatic lists = [...CollectableKeys.all, 'list'] as const;\n\tstatic floorOrders = [...CollectableKeys.all, 'floorOrders'] as const;\n\tstatic userBalances = [\n\t\t...CollectableKeys.all,\n\t\t...CollectableKeys.details,\n\t\t'userBalances',\n\t] as const;\n\tstatic royaltyPercentage = [\n\t\t...CollectableKeys.all,\n\t\t'royaltyPercentage',\n\t] as const;\n\tstatic highestOffers = [\n\t\t...CollectableKeys.all,\n\t\t...CollectableKeys.details,\n\t\t'highestOffers',\n\t] as const;\n\tstatic lowestListings = [\n\t\t...CollectableKeys.all,\n\t\t...CollectableKeys.details,\n\t\t'lowestListings',\n\t] as const;\n\tstatic offers = [...CollectableKeys.all, 'offers'] as const;\n\tstatic offersCount = [...CollectableKeys.all, 'offersCount'] as const;\n\tstatic listings = [...CollectableKeys.all, 'listings'] as const;\n\tstatic listingsCount = [...CollectableKeys.all, 'listingsCount'] as const;\n\tstatic listPrimarySaleItems = ['listPrimarySaleItems'] as const;\n\tstatic primarySaleItemsCount = ['primarySaleItemsCount'] as const;\n\tstatic filter = [...CollectableKeys.all, 'filter'] as const;\n\tstatic counts = [...CollectableKeys.all, 'counts'] as const;\n\tstatic collectibleActivities = [\n\t\t...CollectableKeys.all,\n\t\t'collectibleActivities',\n\t] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass CollectionKeys {\n\tstatic all = ['collections'] as const;\n\tstatic list = [...CollectionKeys.all, 'list'] as const;\n\tstatic detail = [...CollectionKeys.all, 'detail'] as const;\n\tstatic collectionActivities = [\n\t\t...CollectionKeys.all,\n\t\t'collectionActivities',\n\t] as const;\n\tstatic collectionItemsOrders = [\n\t\t...CollectionKeys.all,\n\t\t'collectionItemsOrders',\n\t] as const;\n\tstatic collectionItemsOrdersCount = [\n\t\t...CollectionKeys.all,\n\t\t'collectionItemsOrdersCount',\n\t] as const;\n\tstatic getCountOfFilteredOrders = [\n\t\t...CollectionKeys.all,\n\t\t'getCountOfFilteredOrders',\n\t] as const;\n\tstatic activeListingsCurrencies = [\n\t\t...CollectionKeys.all,\n\t\t'activeListingsCurrencies',\n\t] as const;\n\tstatic activeOffersCurrencies = [\n\t\t...CollectionKeys.all,\n\t\t'activeOffersCurrencies',\n\t] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass BalanceQueries {\n\tstatic all = ['balances'] as const;\n\tstatic lists = [...BalanceQueries.all, 'tokenBalances'] as const;\n\tstatic collectionBalanceDetails = [\n\t\t...BalanceQueries.all,\n\t\t'collectionBalanceDetails',\n\t] as const;\n\tstatic inventory = ['inventory'] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass CheckoutKeys {\n\tstatic all = ['checkouts'] as const;\n\tstatic options = [...CheckoutKeys.all, 'options'] as const;\n\tstatic cartItems = [...CheckoutKeys.all, 'cartItems'] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass CurrencyKeys {\n\tstatic all = ['currencies'] as const;\n\tstatic lists = [...CurrencyKeys.all, 'list'] as const;\n\tstatic details = [...CurrencyKeys.all, 'details'] as const;\n\tstatic conversion = [...CurrencyKeys.all, 'conversion'] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass ConfigKeys {\n\tstatic all = ['configs'] as const;\n\tstatic marketplace = [...ConfigKeys.all, 'marketplace'] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass TokenKeys {\n\tstatic all = ['tokens'] as const;\n\tstatic metadata = [...TokenKeys.all, 'metadata'] as const;\n\tstatic supplies = [...TokenKeys.all, 'supplies'] as const;\n\tstatic ranges = [...TokenKeys.all, 'ranges'] as const;\n}\n\n// biome-ignore lint/complexity/noStaticOnlyClass: static class provides better organization and type safety for query keys\nclass TokenSuppliesKeys {\n\tstatic all = ['tokenSupplies'] as const;\n\tstatic maps = [...TokenSuppliesKeys.all, 'map'] as const;\n}\nexport const collectableKeys = CollectableKeys;\nexport const collectionKeys = CollectionKeys;\nexport const balanceQueries = BalanceQueries;\nexport const checkoutKeys = CheckoutKeys;\nexport const currencyKeys = CurrencyKeys;\nexport const configKeys = ConfigKeys;\nexport const tokenKeys = TokenKeys;\nexport const tokenSuppliesKeys = TokenSuppliesKeys;\n","import { SequenceAPIClient } from '@0xsequence/api';\nimport { SequenceIndexer } from '@0xsequence/indexer';\nimport { SequenceMetadata } from '@0xsequence/metadata';\nimport { stringTemplate } from '@0xsequence/network';\nimport type { ApiConfig, Env, SdkConfig } from '../../../types/sdk-config';\nimport { getNetwork } from '../../../utils/network';\nimport { BuilderAPI } from './builder-api';\nimport { SequenceMarketplace } from './marketplace-api';\n\nconst SERVICES = {\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tsequenceApi: 'https://${prefix}api.sequence.app',\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tmetadata: 'https://${prefix}metadata.sequence.app',\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tindexer: 'https://${prefix}${network}-indexer.sequence.app',\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tmarketplaceApi: 'https://${prefix}marketplace-api.sequence.app',\n\t// biome-ignore lint/suspicious/noTemplateCurlyInString: template placeholder for stringTemplate function\n\tbuilderRpcApi: 'https://${prefix}api.sequence.build',\n};\n\ntype ChainNameOrId = string | number;\n\nconst metadataURL = (env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\treturn stringTemplate(SERVICES.metadata, { prefix });\n};\n\nconst indexerURL = (chain: ChainNameOrId, env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\tconst network = getNetwork(chain).name;\n\treturn stringTemplate(SERVICES.indexer, { network: network, prefix });\n};\n\nexport const marketplaceApiURL = (env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\treturn stringTemplate(SERVICES.marketplaceApi, { prefix });\n};\n\nconst builderRpcApiURL = (env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\treturn stringTemplate(SERVICES.builderRpcApi, { prefix });\n};\n\nexport const sequenceApiUrl = (env: Env = 'production') => {\n\tconst prefix = getPrefix(env);\n\treturn stringTemplate(SERVICES.sequenceApi, { prefix });\n};\n\nexport const getBuilderClient = (config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.builder;\n\tconst url =\n\t\toverrides?.url || builderRpcApiURL(overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new BuilderAPI(url, projectAccessKey);\n};\n\nexport const getMetadataClient = (config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.metadata;\n\tconst url = overrides?.url || metadataURL(overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new SequenceMetadata(url, projectAccessKey);\n};\n\nexport const getIndexerClient = (chain: ChainNameOrId, config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.indexer;\n\tconst url =\n\t\toverrides?.url || indexerURL(chain, overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new SequenceIndexer(url, projectAccessKey);\n};\n\nexport const getMarketplaceClient = (config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.marketplace;\n\tconst url =\n\t\toverrides?.url || marketplaceApiURL(overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new SequenceMarketplace(url, projectAccessKey);\n};\n\nexport const getSequenceApiClient = (config: SdkConfig) => {\n\tconst overrides = config._internal?.overrides?.api?.sequenceApi;\n\tconst url = overrides?.url || sequenceApiUrl(overrides?.env || 'production');\n\tconst projectAccessKey = overrides?.accessKey || config.projectAccessKey;\n\treturn new SequenceAPIClient(url, projectAccessKey);\n};\n\nconst getPrefix = (env: ApiConfig['env']) => {\n\tswitch (env) {\n\t\tcase 'development':\n\t\t\treturn 'dev-';\n\t\tcase 'production':\n\t\t\treturn '';\n\t\tcase 'next':\n\t\t\treturn 'next-';\n\t}\n};\n"],"mappings":"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"}