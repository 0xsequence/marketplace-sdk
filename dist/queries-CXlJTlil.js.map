{"version":3,"file":"queries-CXlJTlil.js","names":[],"sources":["../src/react/queries/orders.ts"],"sourcesContent":["import { queryOptions } from '@tanstack/react-query';\nimport type { SdkConfig } from '../../types';\nimport {\n\ttype GetOrdersReturn,\n\tgetMarketplaceClient,\n\ttype ValuesOptional,\n} from '../_internal';\nimport type { GetOrdersInput, Page } from '../_internal/api/marketplace.gen';\nimport type { StandardQueryOptions } from '../types/query';\n\nexport interface FetchOrdersParams {\n\tchainId: number;\n\tinput: GetOrdersInput[];\n\tpage?: Page;\n\tconfig: SdkConfig;\n}\n\n/**\n * Fetches orders from the marketplace API\n */\nexport async function fetchOrders(\n\tparams: FetchOrdersParams,\n): Promise<GetOrdersReturn> {\n\tconst { config, ...apiParams } = params;\n\n\tconst marketplaceClient = getMarketplaceClient(config);\n\treturn marketplaceClient.getOrders({\n\t\tchainId: String(apiParams.chainId),\n\t\tinput: apiParams.input,\n\t\tpage: apiParams.page,\n\t});\n}\n\nexport type OrdersQueryOptions = ValuesOptional<FetchOrdersParams> & {\n\tquery?: StandardQueryOptions;\n};\n\nexport function ordersQueryOptions(params: OrdersQueryOptions) {\n\tconst enabled = Boolean(\n\t\tparams.config &&\n\t\t\tparams.chainId &&\n\t\t\tparams.input &&\n\t\t\t(params.query?.enabled ?? true),\n\t);\n\n\treturn queryOptions({\n\t\tqueryKey: ['orders', params],\n\t\tqueryFn: () =>\n\t\t\tfetchOrders({\n\t\t\t\tchainId: params.chainId!,\n\t\t\t\tinput: params.input!,\n\t\t\t\tpage: params.page,\n\t\t\t\tconfig: params.config!,\n\t\t\t}),\n\t\t...params.query,\n\t\tenabled,\n\t});\n}\n"],"mappings":";;;;;;;AAoBA,eAAsB,YACrB,QAC2B;CAC3B,MAAM,EAAE,OAAQ,GAAG,cAAc;AAGjC,QAD0B,qBAAqB,OAAO,CAC7B,UAAU;EAClC,SAAS,OAAO,UAAU,QAAQ;EAClC,OAAO,UAAU;EACjB,MAAM,UAAU;EAChB,CAAC;;AAOH,SAAgB,mBAAmB,QAA4B;CAC9D,MAAM,UAAU,QACf,OAAO,UACN,OAAO,WACP,OAAO,UACN,OAAO,OAAO,WAAW,MAC3B;AAED,QAAO,aAAa;EACnB,UAAU,CAAC,UAAU,OAAO;EAC5B,eACC,YAAY;GACX,SAAS,OAAO;GAChB,OAAO,OAAO;GACd,MAAM,OAAO;GACb,QAAQ,OAAO;GACf,CAAC;EACH,GAAG,OAAO;EACV;EACA,CAAC"}