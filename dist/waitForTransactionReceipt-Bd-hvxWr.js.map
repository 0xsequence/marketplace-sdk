{"version":3,"file":"waitForTransactionReceipt-Bd-hvxWr.js","names":[],"sources":["../src/react/utils/waitForTransactionReceipt.ts"],"sourcesContent":["import type { TransactionReceipt } from '@0xsequence/indexer';\nimport {\n\ttype Hex,\n\tTransactionReceiptNotFoundError,\n\tWaitForTransactionReceiptTimeoutError,\n} from 'viem';\nimport type { SdkConfig } from '../../types';\nimport { getIndexerClient } from '../_internal/api';\n\nconst ONE_MIN = 60 * 1000;\nconst THREE_MIN = 3 * ONE_MIN;\n\nexport const waitForTransactionReceipt = async ({\n\ttxHash,\n\tchainId,\n\tsdkConfig,\n\ttimeout = THREE_MIN,\n}: {\n\ttxHash: Hex;\n\tchainId: number;\n\tsdkConfig: SdkConfig;\n\ttimeout?: number;\n}): Promise<TransactionReceipt> => {\n\tconst indexer = getIndexerClient(chainId, sdkConfig);\n\treturn Promise.race([\n\t\tnew Promise<TransactionReceipt>((resolve, reject) => {\n\t\t\tindexer.subscribeReceipts(\n\t\t\t\t{\n\t\t\t\t\tfilter: {\n\t\t\t\t\t\ttxnHash: txHash,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tonMessage: ({ receipt }) => {\n\t\t\t\t\t\tresolve(receipt);\n\t\t\t\t\t},\n\t\t\t\t\tonError: () => {\n\t\t\t\t\t\treject(TransactionReceiptNotFoundError);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}),\n\t\tnew Promise<TransactionReceipt>((_, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\treject(WaitForTransactionReceiptTimeoutError);\n\t\t\t}, timeout);\n\t\t}),\n\t]);\n};\n"],"mappings":";;;;AAUA,MAAM,YAAY,KADF,KAAK;AAGrB,MAAa,4BAA4B,OAAO,EAC/C,QACA,SACA,WACA,UAAU,gBAMwB;CAClC,MAAM,UAAU,iBAAiB,SAAS,UAAU;AACpD,QAAO,QAAQ,KAAK,CACnB,IAAI,SAA6B,SAAS,WAAW;AACpD,UAAQ,kBACP,EACC,QAAQ,EACP,SAAS,QACT,EACD,EACD;GACC,YAAY,EAAE,cAAc;AAC3B,YAAQ,QAAQ;;GAEjB,eAAe;AACd,WAAO,gCAAgC;;GAExC,CACD;GACA,EACF,IAAI,SAA6B,GAAG,WAAW;AAC9C,mBAAiB;AAChB,UAAO,sCAAsC;KAC3C,QAAQ;GACV,CACF,CAAC"}